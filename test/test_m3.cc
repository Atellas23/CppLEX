#include <matrix.hh>
#include <iostream>
#include <cmath>
using namespace std;

int main(){
    matrix A = {
        {0.262482234698333,0.546805718738968,0.885168008202475,0.653757348668560,0.744074260367462,0.239932010568717,0.681971904149063,0.518594942510538,0.390937802323736,0.431651170248720},
        {0.801014622769739,0.521135830804001,0.913286827639239,0.494173936639270,0.500022435590201,0.886511933076101,0.042431137500742,0.972974554763863,0.831379742839070,0.015487125636019},
        {0.029220277562146,0.231594386708524,0.796183873585212,0.779051723231275,0.479922141146060,0.028674152464106,0.071445464600642,0.648991492712356,0.803364391602440,0.984063724379154},
        {0.928854139478045,0.488897743920167,0.098712278655574,0.715037078400694,0.904722238067363,0.489901388512224,0.521649842464284,0.800330575352401,0.060471179169894,0.167168409914656},
        {0.730330862855453,0.624060088173690,0.261871183870716,0.903720560556316,0.609866648422558,0.167927145682257,0.096730025780867,0.453797708726919,0.399257770613576,0.106216344928664},
        {0.488608973803579,0.679135540865748,0.335356839962797,0.890922504330789,0.617666389588455,0.978680649641159,0.818148553859625,0.432391503783462,0.526875830508296,0.372409740055537},
        {0.578525061023439,0.395515215668593,0.679727951377338,0.334163052737496,0.859442305646212,0.712694471678914,0.817547092079286,0.825313795402046,0.416799467930787,0.198118402542975},
        {0.237283579771521,0.367436648544477,0.136553137355370,0.698745832334794,0.805489424529686,0.500471624154843,0.722439592366842,0.083469814858914,0.656859890973707,0.489687638016024},
        {0.458848828179931,0.987982003161633,0.721227498581740,0.197809826685929,0.576721515614685,0.471088374541939,0.149865442477967,0.133171007607162,0.627973359190104,0.339493413390758},
        {0.963088539286913,0.037738866239552,0.106761861607241,0.030540946304637,0.182922469414914,0.059618867579639,0.659605252908307,0.173388613119006,0.291984079961715,0.951630464777727}
    };

    double a = 0.853031117721894;

    matrix expected = {
        {0.223905514046859,0.466442293432625,0.75507585540862,0.557675361853643,0.634718497989348,0.204669471152694,0.581743255651203,0.442377623454686,0.333482110475957,0.368211880223229},
        {0.683290398972851,0.444545080235665,0.779062083381783,0.421545745520425,0.426534697117533,0.756222265145703,0.036195080648469,0.82997757196518,0.709192791285352,0.0132110000915926},
        {0.0249258060289816,0.197557218552089,0.67916961959654,0.664555362231142,0.409388520481308,0.0244599443261844,0.060945204524446,0.553609938420421,0.685294824906599,0.839436978716719},
        {0.792341484799564,0.417044988947932,0.0842046453944396,0.609948878200741,0.771756221966456,0.41790112901609,0.444983548176758,0.682706885239865,0.0515837975572553,0.142599855557291},
        {0.622994952248382,0.532342674540426,0.223384268676392,0.770901759879611,0.5202352287652,0.143247080777183,0.0825137220091205,0.387103566694958,0.34057930232565,0.0906058474348323},
        {0.416798659052615,0.579323749509371,0.286069820029147,0.759984619672882,0.526888650689886,0.834845048456187,0.697906175361427,0.368843407765857,0.449441478599143,0.317677096810095},
        {0.493499879434951,0.337386786497796,0.579829094110224,0.285051482378027,0.73313103060287,0.607950561770479,0.697393109746678,0.704018349363105,0.35554291599489,0.16900116236251},
        {0.202410277269553,0.313434894999881,0.116484075386682,0.596051938360065,0.687107544119723,0.426917868940897,0.616263452963237,0.071202349465139,0.560321926983983,0.417718793191403},
        {0.391412328767708,0.842779392446083,0.615229499246947,0.168737937554272,0.491961399079059,0.401853042681301,0.127839885904866,0.113599013467288,0.535680816489507,0.289598445883939},
        {0.821544493133061,0.0321924272498822,0.0910711901368953,0.0260523775625285,0.156038558541453,0.0508567492487732,0.562663806143606,0.147905882449154,0.24907150608674,0.81177039902755}
    };

    A = a * A;
    for (int i = 0; i < (int) expected.size(); i++){
        for (int j = 0; j < (int) expected[0].size(); j++){
            if (abs(A[i][j]-expected[i][j]) > 1e-10){
                cout << "La multiplicación de matriz por escalar NO funciona" << endl;
                return 0;
            }
        }
    }
    cout << "La multiplicación de matriz por escalar SI funciona" << endl;
}