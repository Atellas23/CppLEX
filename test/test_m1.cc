#include <matrix.hh>
#include <iostream>
#include <cmath>
using namespace std;

int main(){
    matrix A = {
        {0.262482234698333,0.546805718738968,0.885168008202475,0.653757348668560,0.744074260367462,0.239932010568717,0.681971904149063,0.518594942510538,0.390937802323736,0.431651170248720},
        {0.801014622769739,0.521135830804001,0.913286827639239,0.494173936639270,0.500022435590201,0.886511933076101,0.042431137500742,0.972974554763863,0.831379742839070,0.015487125636019},
        {0.029220277562146,0.231594386708524,0.796183873585212,0.779051723231275,0.479922141146060,0.028674152464106,0.071445464600642,0.648991492712356,0.803364391602440,0.984063724379154},
        {0.928854139478045,0.488897743920167,0.098712278655574,0.715037078400694,0.904722238067363,0.489901388512224,0.521649842464284,0.800330575352401,0.060471179169894,0.167168409914656},
        {0.730330862855453,0.624060088173690,0.261871183870716,0.903720560556316,0.609866648422558,0.167927145682257,0.096730025780867,0.453797708726919,0.399257770613576,0.106216344928664},
        {0.488608973803579,0.679135540865748,0.335356839962797,0.890922504330789,0.617666389588455,0.978680649641159,0.818148553859625,0.432391503783462,0.526875830508296,0.372409740055537},
        {0.578525061023439,0.395515215668593,0.679727951377338,0.334163052737496,0.859442305646212,0.712694471678914,0.817547092079286,0.825313795402046,0.416799467930787,0.198118402542975},
        {0.237283579771521,0.367436648544477,0.136553137355370,0.698745832334794,0.805489424529686,0.500471624154843,0.722439592366842,0.083469814858914,0.656859890973707,0.489687638016024},
        {0.458848828179931,0.987982003161633,0.721227498581740,0.197809826685929,0.576721515614685,0.471088374541939,0.149865442477967,0.133171007607162,0.627973359190104,0.339493413390758},
        {0.963088539286913,0.037738866239552,0.106761861607241,0.030540946304637,0.182922469414914,0.059618867579639,0.659605252908307,0.173388613119006,0.291984079961715,0.951630464777727}
    };

    matrix expected = {
        {0.262482234698333,0.801014622769739,0.0292202775621463,0.928854139478045,0.730330862855453,0.488608973803579,0.578525061023439,0.237283579771521,0.458848828179931,0.963088539286913},
        {0.546805718738968,0.521135830804001,0.231594386708524,0.488897743920167,0.62406008817369,0.679135540865748,0.395515215668593,0.367436648544477,0.987982003161633,0.0377388662395521},
        {0.885168008202475,0.913286827639239,0.796183873585212,0.0987122786555743,0.261871183870716,0.335356839962797,0.679727951377338,0.13655313735537,0.72122749858174,0.106761861607241},
        {0.65375734866856,0.49417393663927,0.779051723231275,0.715037078400694,0.903720560556316,0.890922504330789,0.334163052737496,0.698745832334794,0.197809826685929,0.0305409463046367},
        {0.744074260367462,0.500022435590201,0.47992214114606,0.904722238067363,0.609866648422558,0.617666389588455,0.859442305646212,0.805489424529686,0.576721515614685,0.182922469414914},
        {0.239932010568717,0.886511933076101,0.0286741524641061,0.489901388512224,0.167927145682257,0.978680649641159,0.712694471678914,0.500471624154843,0.471088374541939,0.0596188675796392},
        {0.681971904149063,0.0424311375007417,0.0714454646006424,0.521649842464284,0.096730025780867,0.818148553859625,0.817547092079286,0.722439592366842,0.149865442477967,0.659605252908307},
        {0.518594942510538,0.972974554763863,0.648991492712356,0.800330575352401,0.453797708726919,0.432391503783462,0.825313795402046,0.083469814858914,0.133171007607162,0.173388613119006},
        {0.390937802323736,0.83137974283907,0.80336439160244,0.0604711791698936,0.399257770613576,0.526875830508296,0.416799467930787,0.656859890973707,0.627973359190104,0.291984079961715},
        {0.43165117024872,0.015487125636019,0.984063724379154,0.167168409914656,0.106216344928664,0.372409740055537,0.198118402542975,0.489687638016024,0.339493413390758,0.951630464777727}
    };

    A = transpose(A);
    for (int i = 0; i < (int) expected.size(); i++){
        for (int j = 0; j < (int) expected[0].size(); j++){
            if (abs(A[i][j]-expected[i][j]) > 1e-10){
                cout << "La transposición NO funciona" << endl;
                return 0;
            }
        }
    }
    cout << "La transposición SI funciona" << endl;
}